version: "3.7"

services:
  # AUTH API
  server:
    container_name: auth_api
    build:
      context: ./auth-server/
      dockerfile: ./docker/Dockerfile
    working_dir: /usr/src/server
    ports:
      - "3000:3000"
    depends_on:
      - "postgres"
      - "redis"
    command: npm start
    restart: always
    # Using volumes overrides dockerignore..
    environment:
      DB_URI: ${DKR_DB_URI}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${DKR_ENV}
      REDIS_ADDRESS: ${DKR_RD_ADDRESS}
      REDIS_DB: ${DKR_RD_DB}
      REDIS_PASSWORD: "${DKR_RD_PASSWORD}"
      SERVER_IP: server
      SERVER_PORT: 3000

  # ws-server
  ws-server:
    container_name: ws_server
    build:
      context: ./chat-socket-server
      dockerfile: ./docker/Dockerfile
    working_dir: /usr/src/ws-server
    ports:
      - "8080:8080"
    depends_on:
      - "redis"
    #restart: always
    environment:
      JWT_SECRET: ${JWT_SECRET}
      REDIS_DB: ${DKR_RD_DB}
      REDIS_PASSWORD: "${DKR_RD_PASSWORD}"

  # DB
  postgres:
    container_name: auth_db
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_DB: ${DKR_PG_DB}
      POSTGRES_USER: "${DKR_PG_USER}"
      POSTGRES_PASSWORD: "${DKR_PG_PASSWORD}"
  # Redis
  redis:
    image: redis:7.0.4
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    restart: always
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      REDIS_DB: ${DKR_RD_DB}
      REDIS_PASSWORD: "${DKR_RD_PASSWORD}"
